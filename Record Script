local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")

local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "ReplaySystem"
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 240, 0, 300)
frame.Position = UDim2.new(0.5, -120, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.Draggable = true
frame.Active = true

local uiList = Instance.new("UIListLayout", frame)
uiList.Padding = UDim.new(0, 5)
uiList.FillDirection = Enum.FillDirection.Vertical
uiList.HorizontalAlignment = Enum.HorizontalAlignment.Center
uiList.VerticalAlignment = Enum.VerticalAlignment.Top

-- ☠️Slot toggle button
local toggleBtn = Instance.new("TextButton", frame)
toggleBtn.Size = UDim2.new(1, -10, 0, 30)
toggleBtn.Text = "☠️Slot"
toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)

-- Second GUI for slots
local slotGui = Instance.new("Frame", screenGui)
slotGui.Size = UDim2.new(0, 240, 0, 300)
slotGui.Position = UDim2.new(0, frame.Position.X.Offset + 250, 0, frame.Position.Y.Offset)
slotGui.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
slotGui.Visible = false

local scroll = Instance.new("ScrollingFrame", slotGui)
scroll.Size = UDim2.new(1, 0, 1, -25)
scroll.Position = UDim2.new(0, 0, 0, 25)
scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
scroll.ScrollBarThickness = 6
scroll.BackgroundTransparency = 1

local scrollList = Instance.new("UIListLayout", scroll)
scrollList.Padding = UDim.new(0, 5)
scrollList.FillDirection = Enum.FillDirection.Vertical
scrollList.SortOrder = Enum.SortOrder.LayoutOrder

-- Credit
local credit = Instance.new("TextLabel", screenGui)
credit.Size = UDim2.new(0, 150, 0, 30)
credit.Position = UDim2.new(0, frame.Position.X.Offset - 160, 0, frame.Position.Y.Offset)
credit.Text = "Created by BlickShot"
credit.TextColor3 = Color3.new(1, 1, 1)
credit.BackgroundTransparency = 1

frame:GetPropertyChangedSignal("Position"):Connect(function()
	slotGui.Position = UDim2.new(0, frame.Position.X.Offset + 250, 0, frame.Position.Y.Offset)
	credit.Position = UDim2.new(0, frame.Position.X.Offset - 160, 0, frame.Position.Y.Offset)
end)

toggleBtn.MouseButton1Click:Connect(function()
	slotGui.Visible = not slotGui.Visible
end)

-- Logic
local isRecording = false
local isReplaying = false
local replayConnection = nil
local recordings = {}
local recordCount = 0
local currentRecord = {}

local function clearPlatforms()
	for _, part in ipairs(workspace:GetChildren()) do
		if part.Name == "Platform1" or part.Name == "Platform2" then
			part:Destroy()
		end
	end
end

local function updateCanvas()
	scroll.CanvasSize = UDim2.new(0, 0, 0, scrollList.AbsoluteContentSize.Y + 10)
end

local function createRecordSlot(name, data)
	local container = Instance.new("Frame")
	container.Size = UDim2.new(1, -10, 0, 30)
	container.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	container.BorderSizePixel = 0
	container.Parent = scroll

	local playBtn = Instance.new("TextButton", container)
	playBtn.Size = UDim2.new(0.4, -5, 1, 0)
	playBtn.Text = name
	playBtn.Position = UDim2.new(0, 0, 0, 0)
	playBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	playBtn.TextColor3 = Color3.new(1, 1, 1)

	playBtn.MouseButton1Click:Connect(function()
		if isReplaying or not data or #data < 2 then return end
		isReplaying = true
		hrp.Anchored = true
		char:MoveTo(data[1].cf.Position)
		local startTime = tick()
		local i = 1

		replayConnection = RunService.RenderStepped:Connect(function()
			local now = tick() - startTime
			while i < #data and data[i + 1].time <= now do
				i += 1
			end

			if i >= #data then
				replayConnection:Disconnect()
				isReplaying = false
				hrp.Anchored = false
				if humanoid then
					humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
				end
				return
			end

			local t1, t2 = data[i].time, data[i + 1].time
			local cf1, cf2 = data[i].cf, data[i + 1].cf
			local alpha = (now - t1) / (t2 - t1)
			hrp.CFrame = cf1:Lerp(cf2, alpha)
		end)
	end)

	local nameBox = Instance.new("TextBox", container)
	nameBox.Size = UDim2.new(0.35, -5, 1, 0)
	nameBox.Position = UDim2.new(0.4, 0, 0, 0)
	nameBox.Text = name
	nameBox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	nameBox.TextColor3 = Color3.new(1, 1, 1)
	nameBox.FocusLost:Connect(function()
		playBtn.Text = nameBox.Text
	end)

	local delBtn = Instance.new("TextButton", container)
	delBtn.Size = UDim2.new(0.25, 0, 1, 0)
	delBtn.Position = UDim2.new(0.75, 0, 0, 0)
	delBtn.Text = "X"
	delBtn.BackgroundColor3 = Color3.fromRGB(100, 30, 30)
	delBtn.TextColor3 = Color3.new(1, 1, 1)
	delBtn.MouseButton1Click:Connect(function()
		container:Destroy()
		updateCanvas()
	end)

	updateCanvas()
end

local function createButton(text, callback)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -10, 0, 30)
	btn.Text = text
	btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Parent = frame
	btn.MouseButton1Click:Connect(callback)
	return btn
end

createButton("Start Record", function()
	if isRecording then return end
	clearPlatforms()
	isRecording = true
	currentRecord = {}
	local recordStartTime = tick()

	local p1 = Instance.new("Part", workspace)
	p1.Name = "Platform1"
	p1.Anchored = true
	p1.CanCollide = false
	p1.Transparency = 0.5
	p1.Size = Vector3.new(2, 0.2, 2)
	p1.Color = Color3.fromRGB(0, 255, 0)
	p1.CFrame = hrp.CFrame

	local connection
	connection = RunService.RenderStepped:Connect(function()
		if not isRecording then connection:Disconnect() return end
		table.insert(currentRecord, {
			time = tick() - recordStartTime,
			cf = hrp.CFrame
		})
	end)
end)

createButton("Stop Record", function()
	if not isRecording then return end
	isRecording = false
	if #currentRecord > 0 then
		recordCount += 1
		recordings[recordCount] = currentRecord
		createRecordSlot("Record " .. recordCount, currentRecord)

		local p2 = Instance.new("Part", workspace)
		p2.Name = "Platform2"
		p2.Anchored = true
		p2.CanCollide = false
		p2.Transparency = 0.5
		p2.Size = Vector3.new(2, 0.2, 2)
		p2.Color = Color3.fromRGB(255, 0, 0)
		p2.CFrame = hrp.CFrame
	end
end)

createButton("Stop Replay", function()
	if replayConnection then
		replayConnection:Disconnect()
	end
	isReplaying = false
	hrp.Anchored = false
end)
